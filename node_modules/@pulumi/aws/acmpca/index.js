"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./certificate"));
__export(require("./certificateAuthority"));
__export(require("./certificateAuthorityCertificate"));
__export(require("./getCertificate"));
__export(require("./getCertificateAuthority"));
// Import resources to register:
const certificate_1 = require("./certificate");
const certificateAuthority_1 = require("./certificateAuthority");
const certificateAuthorityCertificate_1 = require("./certificateAuthorityCertificate");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:acmpca/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "aws:acmpca/certificateAuthority:CertificateAuthority":
                return new certificateAuthority_1.CertificateAuthority(name, undefined, { urn });
            case "aws:acmpca/certificateAuthorityCertificate:CertificateAuthorityCertificate":
                return new certificateAuthorityCertificate_1.CertificateAuthorityCertificate(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "acmpca/certificate", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/certificateAuthority", _module);
pulumi.runtime.registerResourceModule("aws", "acmpca/certificateAuthorityCertificate", _module);
//# sourceMappingURL=index.js.map