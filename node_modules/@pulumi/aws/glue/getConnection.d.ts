import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * This data source can be used to fetch information about a specific Glue Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.glue.getConnection({
 *     id: "123456789123:connection",
 * }));
 * ```
 */
export declare function getConnection(args: GetConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionResult>;
/**
 * A collection of arguments for invoking getConnection.
 */
export interface GetConnectionArgs {
    /**
     * A concatenation of the catalog ID and connection name. For example, if your account ID is
     * `123456789123` and the connection name is `conn` then the ID is `123456789123:conn`.
     */
    id: string;
}
/**
 * A collection of values returned by getConnection.
 */
export interface GetConnectionResult {
    /**
     * The ARN of the Glue Connection.
     */
    readonly arn: string;
    /**
     * The catalog ID of the Glue Connection.
     */
    readonly catalogId: string;
    readonly connectionProperties: {
        [key: string]: string;
    };
    /**
     * The type of Glue Connection.
     */
    readonly connectionType: string;
    /**
     * Description of the connection.
     */
    readonly description: string;
    readonly id: string;
    /**
     * A list of criteria that can be used in selecting this connection.
     */
    readonly matchCriterias: string[];
    /**
     * The name of the Glue Connection.
     */
    readonly name: string;
    /**
     * A map of physical connection requirements, such as VPC and SecurityGroup.
     */
    readonly physicalConnectionRequirements: outputs.glue.GetConnectionPhysicalConnectionRequirement[];
}
