"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./cachePolicy"));
__export(require("./distribution"));
__export(require("./function"));
__export(require("./getCachePolicy"));
__export(require("./getDistribution"));
__export(require("./getOriginRequestPolicy"));
__export(require("./keyGroup"));
__export(require("./originAccessIdentity"));
__export(require("./originRequestPolicy"));
__export(require("./publicKey"));
__export(require("./realtimeLogConfig"));
// Import resources to register:
const cachePolicy_1 = require("./cachePolicy");
const distribution_1 = require("./distribution");
const function_1 = require("./function");
const keyGroup_1 = require("./keyGroup");
const originAccessIdentity_1 = require("./originAccessIdentity");
const originRequestPolicy_1 = require("./originRequestPolicy");
const publicKey_1 = require("./publicKey");
const realtimeLogConfig_1 = require("./realtimeLogConfig");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:cloudfront/cachePolicy:CachePolicy":
                return new cachePolicy_1.CachePolicy(name, undefined, { urn });
            case "aws:cloudfront/distribution:Distribution":
                return new distribution_1.Distribution(name, undefined, { urn });
            case "aws:cloudfront/function:Function":
                return new function_1.Function(name, undefined, { urn });
            case "aws:cloudfront/keyGroup:KeyGroup":
                return new keyGroup_1.KeyGroup(name, undefined, { urn });
            case "aws:cloudfront/originAccessIdentity:OriginAccessIdentity":
                return new originAccessIdentity_1.OriginAccessIdentity(name, undefined, { urn });
            case "aws:cloudfront/originRequestPolicy:OriginRequestPolicy":
                return new originRequestPolicy_1.OriginRequestPolicy(name, undefined, { urn });
            case "aws:cloudfront/publicKey:PublicKey":
                return new publicKey_1.PublicKey(name, undefined, { urn });
            case "aws:cloudfront/realtimeLogConfig:RealtimeLogConfig":
                return new realtimeLogConfig_1.RealtimeLogConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "cloudfront/cachePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/distribution", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/function", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/keyGroup", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/originAccessIdentity", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/originRequestPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/publicKey", _module);
pulumi.runtime.registerResourceModule("aws", "cloudfront/realtimeLogConfig", _module);
//# sourceMappingURL=index.js.map