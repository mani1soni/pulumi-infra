"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./dataLakeSettings"));
__export(require("./getDataLakeSettings"));
__export(require("./getPermissions"));
__export(require("./getResource"));
__export(require("./permissions"));
__export(require("./resource"));
// Import resources to register:
const dataLakeSettings_1 = require("./dataLakeSettings");
const permissions_1 = require("./permissions");
const resource_1 = require("./resource");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:lakeformation/dataLakeSettings:DataLakeSettings":
                return new dataLakeSettings_1.DataLakeSettings(name, undefined, { urn });
            case "aws:lakeformation/permissions:Permissions":
                return new permissions_1.Permissions(name, undefined, { urn });
            case "aws:lakeformation/resource:Resource":
                return new resource_1.Resource(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lakeformation/dataLakeSettings", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/permissions", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/resource", _module);
//# sourceMappingURL=index.js.map