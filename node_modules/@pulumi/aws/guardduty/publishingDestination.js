"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage a GuardDuty PublishingDestination. Requires an existing GuardDuty Detector.
 *
 * ## Import
 *
 * GuardDuty PublishingDestination can be imported using the the master GuardDuty detector ID and PublishingDestinationID, e.g.
 *
 * ```sh
 *  $ pulumi import aws:guardduty/publishingDestination:PublishingDestination test a4b86f26fa42e7e7cf0d1c333ea77777:a4b86f27a0e464e4a7e0516d242f1234
 * ```
 */
class PublishingDestination extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["destinationArn"] = state ? state.destinationArn : undefined;
            inputs["destinationType"] = state ? state.destinationType : undefined;
            inputs["detectorId"] = state ? state.detectorId : undefined;
            inputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.destinationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationArn'");
            }
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.kmsKeyArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyArn'");
            }
            inputs["destinationArn"] = args ? args.destinationArn : undefined;
            inputs["destinationType"] = args ? args.destinationType : undefined;
            inputs["detectorId"] = args ? args.detectorId : undefined;
            inputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(PublishingDestination.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PublishingDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PublishingDestination(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PublishingDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublishingDestination.__pulumiType;
    }
}
exports.PublishingDestination = PublishingDestination;
/** @internal */
PublishingDestination.__pulumiType = 'aws:guardduty/publishingDestination:PublishingDestination';
//# sourceMappingURL=publishingDestination.js.map